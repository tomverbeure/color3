
    // line nr: 1, packet id: 0
    // (0x60) (0x00) Chip Vendor ID (l)
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x00);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 3, packet id: 2
    // (0x60) (0x15) Slave Addr XVYCC = 0x64
    // (0x60) (0x16) Slave Addr Reserved 1 = 0xd0
    // (0x60) (0x17) Slave Addr Reserved 2 = 0xe6
    // (0x60) (0x18) Slave Addr CEC = 0xce
    // (0x60) (0x19) Slave Addr EDID = 0xee
    {
    byte buf[5] = { 0x64, 0xd0, 0xe6, 0xce, 0xee };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x15, buf, 5);
    }

    // line nr: 9, packet id: 3
    // (0x60) (0x14) Unknown 0x60_0x14 = 0x70
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x14, 0x70);

    // line nr: 11, packet id: 4
    // (0x60) (0x02) Chip Device ID (l)
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x02);

    {
    byte buf[2];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 2);
    }

    // line nr: 14, packet id: 6
    // (0x60) (0x7e) Interrupt Unmask 6 = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7e, 0x04);

    // line nr: 16, packet id: 7
    // (0x60) (0x7b) Interrupt Status 5 = 0x10
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7b, 0x10);

    // line nr: 18, packet id: 8
    // (0x60) (0x7d) Interrupt Unmask 5 = 0x10
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7d, 0x10);

    // line nr: 20, packet id: 9
    // (0x60) (0xb8) AEX Exception Enable 3
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0xb8);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 22, packet id: 11
    // (0x60) (0xb8) AEX Exception Enable 3 = 0x01
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0xb8, 0x01);

    // line nr: 24, packet id: 12
    // (0x60) (0xb7) AEX Exception Enable 2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0xb7);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 26, packet id: 14
    // (0x60) (0x7a) Interrupt Info Frame Control
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x7a);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 28, packet id: 16
    // (0x60) (0x7a) Interrupt Info Frame Control = 0x40
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7a, 0x40);

    // line nr: 30, packet id: 17
    // (0x60) (0x09) Port Switch = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x09, 0x00);

    // line nr: 32, packet id: 18
    // (0x60) (0x82) TMDS Termination Control = 0xff
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x82, 0xff);

    // line nr: 34, packet id: 29
    // (0x60) (0x7a) Interrupt Info Frame Control = 0x41
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7a, 0x41);

    // line nr: 36, packet id: 30
    // (0x68) (0x37) RX_AUDP_MUTE
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x37);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 38, packet id: 32
    // (0x68) (0x37) RX_AUDP_MUTE = 0x02
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x37, 0x02);

    // line nr: 40, packet id: 33
    // (0x68) (0x29) RX_AUDIO_CTRL = 0x14
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x29, 0x14);

    // line nr: 42, packet id: 34
    // (0x68) (0x27) RX_I2S_CTRL2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x27);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 44, packet id: 36
    // (0x60) (0x07) SW Reset 2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x07);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 46, packet id: 38
    // (0x60) (0x07) SW Reset 2 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x07, 0x08);

    // line nr: 48, packet id: 39
    // (0x60) (0x08) System Ctrl 1
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x08);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 50, packet id: 41
    // (0x60) (0x08) System Ctrl 1 = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x08, 0x04);

    // line nr: 52, packet id: 42
    // (0x60) (0x09) Port Switch
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x09);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 54, packet id: 44
    // (0x60) (0x09) Port Switch = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x09, 0x00);

    // line nr: 56, packet id: 45
    // (0x60) (0x2f) Unknown 0x60_0x2f = 0x00
    // (0x60) (0x30) * RX_CH_STATUS4 = 0x00
    {
    byte buf[2] = { 0x00, 0x00 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x2f, buf, 2);
    }

    // line nr: 59, packet id: 46
    // (0x60) (0x2f) Unknown 0x60_0x2f = 0x00
    // (0x60) (0x30) * RX_CH_STATUS4 = 0x00
    {
    byte buf[2] = { 0x00, 0x00 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x2f, buf, 2);
    }

    // line nr: 62, packet id: 47
    // (0x60) (0x06) System Status
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x06);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 64, packet id: 49
    // (0xee) (0x01) EN_EDID
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x01, 0x00);

    // line nr: 66, packet id: 50
    // (0xee) (0x13) HDP_HW_CTRL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x13, 0xff);

    // line nr: 68, packet id: 51
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x01);

    // line nr: 70, packet id: 52
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x00);

    // line nr: 72, packet id: 53
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4d, 0x29, 0x34, 0x93, 0x01, 0x00, 0x00, 0x00, 0x00, 0x14, 0x01, 0x03, 0x80, 0x00, 0x00, 0x78, 0x0a, 0xee, 0x91, 0xa3, 0x54, 0x4c, 0x99, 0x26, 0x0f, 0x50, 0x54, 0x20, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x53, 0x49, 0x49, 0x20, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x52, 0x0a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x16, 0x94, 0x0e, 0x81, 0x11, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xa8 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 201, packet id: 54
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x02);

    // line nr: 203, packet id: 55
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x00);

    // line nr: 205, packet id: 56
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4d, 0x29, 0x34, 0x93, 0x01, 0x00, 0x00, 0x00, 0x00, 0x14, 0x01, 0x03, 0x80, 0x00, 0x00, 0x78, 0x0a, 0xee, 0x91, 0xa3, 0x54, 0x4c, 0x99, 0x26, 0x0f, 0x50, 0x54, 0x20, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x53, 0x49, 0x49, 0x20, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x52, 0x0a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x16, 0x94, 0x0e, 0x81, 0x11, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xa8 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 334, packet id: 57
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x04);

    // line nr: 336, packet id: 58
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x00);

    // line nr: 338, packet id: 59
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4d, 0x29, 0x34, 0x93, 0x01, 0x00, 0x00, 0x00, 0x00, 0x14, 0x01, 0x03, 0x80, 0x00, 0x00, 0x78, 0x0a, 0xee, 0x91, 0xa3, 0x54, 0x4c, 0x99, 0x26, 0x0f, 0x50, 0x54, 0x20, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x53, 0x49, 0x49, 0x20, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x52, 0x0a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x16, 0x94, 0x0e, 0x81, 0x11, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xa8 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 467, packet id: 60
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x08);

    // line nr: 469, packet id: 61
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x00);

    // line nr: 471, packet id: 62
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4d, 0x29, 0x34, 0x93, 0x01, 0x00, 0x00, 0x00, 0x00, 0x14, 0x01, 0x03, 0x80, 0x00, 0x00, 0x78, 0x0a, 0xee, 0x91, 0xa3, 0x54, 0x4c, 0x99, 0x26, 0x0f, 0x50, 0x54, 0x20, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0x78, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x53, 0x49, 0x49, 0x20, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x45, 0x52, 0x0a, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x16, 0x94, 0x0e, 0x81, 0x11, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xa8 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 600, packet id: 63
    // (0xee) (0x01) EN_EDID
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x01, 0x0f);

    // line nr: 602, packet id: 64
    // (0xee) (0x01) EN_EDID
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x01, 0x00);

    // line nr: 604, packet id: 65
    // (0xee) (0x13) HDP_HW_CTRL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x13, 0xff);

    // line nr: 606, packet id: 66
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x01);

    // line nr: 608, packet id: 67
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x80);

    // line nr: 610, packet id: 68
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x02, 0x03, 0x29, 0x76, 0x4f, 0x82, 0x91, 0x83, 0x92, 0x84, 0x93, 0x85, 0x94, 0x86, 0x95, 0x87, 0x96, 0x90, 0x9f, 0x81, 0x23, 0x0f, 0x7f, 0x07, 0x23, 0x4d, 0x02, 0x00, 0x83, 0x4f, 0x00, 0x00, 0x68, 0x03, 0x0c, 0x00, 0x10, 0x00, 0x80, 0x2d, 0x00, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x01, 0x1d, 0x00, 0x72, 0x51, 0xd0, 0x1e, 0x20, 0x6e, 0x28, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x1d, 0x00, 0xbc, 0x52, 0xd0, 0x1e, 0x20, 0xb8, 0x28, 0x55, 0x40, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 739, packet id: 69
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x02);

    // line nr: 741, packet id: 70
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x80);

    // line nr: 743, packet id: 71
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x02, 0x03, 0x29, 0x76, 0x4f, 0x82, 0x91, 0x83, 0x92, 0x84, 0x93, 0x85, 0x94, 0x86, 0x95, 0x87, 0x96, 0x90, 0x9f, 0x81, 0x23, 0x0f, 0x7f, 0x07, 0x23, 0x4d, 0x02, 0x00, 0x83, 0x4f, 0x00, 0x00, 0x68, 0x03, 0x0c, 0x00, 0x20, 0x00, 0x80, 0x2d, 0x00, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x01, 0x1d, 0x00, 0x72, 0x51, 0xd0, 0x1e, 0x20, 0x6e, 0x28, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x1d, 0x00, 0xbc, 0x52, 0xd0, 0x1e, 0x20, 0xb8, 0x28, 0x55, 0x40, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 872, packet id: 72
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x04);

    // line nr: 874, packet id: 73
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x80);

    // line nr: 876, packet id: 74
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x02, 0x03, 0x29, 0x76, 0x4f, 0x82, 0x91, 0x83, 0x92, 0x84, 0x93, 0x85, 0x94, 0x86, 0x95, 0x87, 0x96, 0x90, 0x9f, 0x81, 0x23, 0x0f, 0x7f, 0x07, 0x23, 0x4d, 0x02, 0x00, 0x83, 0x4f, 0x00, 0x00, 0x68, 0x03, 0x0c, 0x00, 0x30, 0x00, 0x80, 0x2d, 0x00, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x01, 0x1d, 0x00, 0x72, 0x51, 0xd0, 0x1e, 0x20, 0x6e, 0x28, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x1d, 0x00, 0xbc, 0x52, 0xd0, 0x1e, 0x20, 0xb8, 0x28, 0x55, 0x40, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 1005, packet id: 75
    // (0xee) (0x04) EDID_FIFO_SEL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x04, 0x08);

    // line nr: 1007, packet id: 76
    // (0xee) (0x02) EDID_FIFO_ADDR
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x02, 0x80);

    // line nr: 1009, packet id: 77
    // (0xee) (0x03) EDID_FIFO_DATA
    {
    byte buf[128] = { 0x02, 0x03, 0x29, 0x76, 0x4f, 0x82, 0x91, 0x83, 0x92, 0x84, 0x93, 0x85, 0x94, 0x86, 0x95, 0x87, 0x96, 0x90, 0x9f, 0x81, 0x23, 0x0f, 0x7f, 0x07, 0x23, 0x4d, 0x02, 0x00, 0x83, 0x4f, 0x00, 0x00, 0x68, 0x03, 0x0c, 0x00, 0x40, 0x00, 0x80, 0x2d, 0x00, 0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x8c, 0x0a, 0xd0, 0x90, 0x20, 0x40, 0x31, 0x20, 0x0c, 0x40, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x18, 0x01, 0x1d, 0x00, 0x72, 0x51, 0xd0, 0x1e, 0x20, 0x6e, 0x28, 0x55, 0x00, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x1d, 0x00, 0xbc, 0x52, 0xd0, 0x1e, 0x20, 0xb8, 0x28, 0x55, 0x40, 0xa0, 0x5a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37 };
    i2c_write_regs(&sii9233_i2c_ctx, 0xee, 0x03, buf, 128);
    }

    // line nr: 1138, packet id: 78
    // (0xee) (0x01) EN_EDID
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0x01, 0x0f);

    // line nr: 1140, packet id: 79
    // (0x60) (0x2e) Unknown 0x60_0x2e = 0x80
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x2e, 0x80);

    // line nr: 1142, packet id: 80
    // (0x60) (0x75) Interrupt Unmask 1 = 0x01
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x75, 0x01);

    // line nr: 1144, packet id: 81
    // (0x60) (0x71) Interrupt Status 1 = 0x03
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x71, 0x03);

    // line nr: 1146, packet id: 82
    // (0x60) (0x09) Port Switch = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x09, 0x00);

    // line nr: 1148, packet id: 83
    // (0x60) (0x0a) Port Switch 2 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x0a, 0x08);

    // line nr: 1150, packet id: 84
    // (0x60) (0x82) TMDS Termination Control = 0xfc
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x82, 0xfc);

    // line nr: 1152, packet id: 85
    // (0x60) (0x10) Hot plug Control = 0x55
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x10, 0x55);

    // line nr: 1154, packet id: 86
    // (0x60) (0x05) SW Reset
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x05);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1156, packet id: 88
    // (0x60) (0x05) SW Reset = 0x10
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x05, 0x10);

    // line nr: 1158, packet id: 89
    // (0x68) (0x18) ACR_CTRL3 = 0x54
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x18, 0x54);

    // line nr: 1160, packet id: 90
    // (0x68) (0x13) <Unknown> = 0x0f
    // (0x68) (0x14) LKTHRESH1 = 0x20
    // (0x68) (0x15) <Unknown> = 0x00
    // (0x68) (0x16) <Unknown> = 0x00
    {
    byte buf[4] = { 0x0f, 0x20, 0x00, 0x00 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x68, 0x13, buf, 4);
    }

    // line nr: 1165, packet id: 91
    // (0x60) (0x08) System Ctrl 1 = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x08, 0x04);

    // line nr: 1167, packet id: 92
    // (0x68) (0x35) * RX_HDMI_CRIT1 = 0x06
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x35, 0x06);

    // line nr: 1169, packet id: 93
    // (0x68) (0x38) * RX_HDMI_CRIT2 = 0x0c
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x38, 0x0c);

    // line nr: 1171, packet id: 94
    // (0x60) (0x79) Interrupt Control = 0x06
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x79, 0x06);

    // line nr: 1173, packet id: 95
    // (0x68) (0x37) RX_AUDP_MUTE = 0x03
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x37, 0x03);

    // line nr: 1175, packet id: 96
    // (0x60) (0x57) Unknown 0x60_0x57
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x57);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1177, packet id: 98
    // (0x60) (0x57) Unknown 0x60_0x57 = 0x02
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x57, 0x02);

    // line nr: 1179, packet id: 99
    // (0x60) (0xb5) Auto Exception Control = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0xb5, 0x00);

    // line nr: 1181, packet id: 100
    // (0x60) (0xbc) Unknown 0x60_0xbc = 0x02
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0xbc, 0x02);

    // line nr: 1183, packet id: 101
    // (0x60) (0xbb) ECC Control = 0x01
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0xbb, 0x01);

    // line nr: 1185, packet id: 102
    // (0xee) (0xfa) <Unknown>
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0xfa, 0x0f);

    // line nr: 1187, packet id: 103
    // (0xee) (0xfc) <Unknown>
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0xfc, 0x0a);

    // line nr: 1189, packet id: 104
    // (0x60) (0x0e) <Unknown> = 0x40
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x0e, 0x40);

    // line nr: 1191, packet id: 105
    // (0x60) (0x83) TMDS Termination Control 2 = 0x60
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x83, 0x60);

    // line nr: 1193, packet id: 106
    // (0x64) (0x87) <Unknown> = 0x43
    i2c_write_reg(&sii9233_i2c_ctx, 0x64, 0x87, 0x43);

    // line nr: 1195, packet id: 107
    // (0x64) (0x81) <Unknown> = 0x18
    i2c_write_reg(&sii9233_i2c_ctx, 0x64, 0x81, 0x18);

    // line nr: 1197, packet id: 108
    // (0xee) (0xe9) DRIVE_CNTL
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0xe9, 0x32);

    // line nr: 1199, packet id: 109
    // (0x64) (0xbb) <Unknown> = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x64, 0xbb, 0x04);

    // line nr: 1201, packet id: 110
    // (0x64) (0x92) <Unknown> = 0x8a
    // (0x64) (0x93) <Unknown> = 0xaa
    // (0x64) (0x94) <Unknown> = 0x1a
    // (0x64) (0x95) <Unknown> = 0x2a
    {
    byte buf[4] = { 0x8a, 0xaa, 0x1a, 0x2a };
    i2c_write_regs(&sii9233_i2c_ctx, 0x64, 0x92, buf, 4);
    }

    // line nr: 1206, packet id: 111
    // (0x64) (0xb5) <Unknown> = 0x40
    i2c_write_reg(&sii9233_i2c_ctx, 0x64, 0xb5, 0x40);

    // line nr: 1208, packet id: 112
    // (0x64) (0x89) <Unknown> = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x64, 0x89, 0x00);

    // line nr: 1210, packet id: 113
    // (0xee) (0xe5) <Unknown>
    i2c_write_reg(&sii9233_i2c_ctx, 0xee, 0xe5, 0x02);

    // line nr: 1212, packet id: 114
    // (0x68) (0xff) <Unknown> = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0xff, 0x04);

    // line nr: 1214, packet id: 121
    // (0x60) (0x75) Interrupt Unmask 1 = 0x02
    // (0x60) (0x76) <Unknown> = 0x98
    // (0x60) (0x77) Interrupt Unmask 3 = 0x4f
    // (0x60) (0x78) <Unknown> = 0x40
    {
    byte buf[4] = { 0x02, 0x98, 0x4f, 0x40 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x75, buf, 4);
    }

    // line nr: 1219, packet id: 122
    // (0x60) (0x7d) Interrupt Unmask 5 = 0x59
    // (0x60) (0x7e) Interrupt Unmask 6 = 0x97
    {
    byte buf[2] = { 0x59, 0x97 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x7d, buf, 2);
    }

    // line nr: 1222, packet id: 123
    // (0x60) (0x92) Interrupt Unmask 7 = 0x00
    // (0x60) (0x93) Interrupt Unmask 8 = 0xc0
    {
    byte buf[2] = { 0x00, 0xc0 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x92, buf, 2);
    }

    // line nr: 1225, packet id: 124
    // (0x60) (0x7a) Interrupt Info Frame Control = 0x2f
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7a, 0x2f);

    // line nr: 1227, packet id: 125
    // (0x60) (0x94) INFM_CLR = 0x40
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x94, 0x40);

    // line nr: 1229, packet id: 126
    // (0x68) (0x2e) RX_AUDIO_SWAP
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x2e);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 1231, packet id: 128
    // (0x68) (0x26) RX_I2S_CTRL1 = 0x40
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x26, 0x40);

    // line nr: 1233, packet id: 129
    // (0x60) (0x88) ACR Configuration 1 = 0x88
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x88, 0x88);

    // line nr: 1235, packet id: 130
    // (0x60) (0x89) ACR Configuration 2 = 0x16
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x89, 0x16);

    // line nr: 1237, packet id: 131
    // (0x68) (0x29) RX_AUDIO_CTRL = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x29, 0x04);

    // line nr: 1239, packet id: 132
    // (0x60) (0xb6) AEC Exception Enable 1 = 0xc1
    // (0x60) (0xb7) AEX Exception Enable 2 = 0x07
    // (0x60) (0xb8) AEX Exception Enable 3 = 0x01
    {
    byte buf[3] = { 0xc1, 0x07, 0x01 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0xb6, buf, 3);
    }

    // line nr: 1243, packet id: 133
    // (0x68) (0x37) RX_AUDP_MUTE
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x37);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 1245, packet id: 135
    // (0x68) (0x29) RX_AUDIO_CTRL = 0x14
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x29, 0x14);

    // line nr: 1247, packet id: 136
    // (0x60) (0x7d) Interrupt Unmask 5 = 0x19
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7d, 0x19);

    // line nr: 1249, packet id: 137
    // (0x68) (0x27) RX_I2S_CTRL2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x27);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 1251, packet id: 139
    // (0x60) (0x7a) Interrupt Info Frame Control
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x7a);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1253, packet id: 141
    // (0x60) (0x73) Interrupt Status 3 = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x73, 0x04);

    // line nr: 1255, packet id: 142
    // (0x60) (0x81) TMDS Analog Control 2 = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x81, 0x00);

    // line nr: 1257, packet id: 143
    // (0x60) (0x61) Deep Color Status
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x61);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1259, packet id: 145
    // (0x60) (0xc5) <Unknown> = 0x40
    // (0x60) (0xc6) <Unknown> = 0x0b
    {
    byte buf[2] = { 0x40, 0x0b };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0xc5, buf, 2);
    }

    // line nr: 1262, packet id: 146
    // (0x60) (0x69) Video Channel PCLK Count Base = 0xff
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x69, 0xff);

    // line nr: 1264, packet id: 147
    // (0x60) (0x0b) System SW Reset 2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x0b);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1266, packet id: 149
    // (0x60) (0x0b) System SW Reset 2 = 0x40
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x0b, 0x40);

    // line nr: 1268, packet id: 150
    // (0x60) (0x07) SW Reset 2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x07);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1270, packet id: 152
    // (0x60) (0x07) SW Reset 2 = 0x0a
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x07, 0x0a);

    // line nr: 1272, packet id: 153
    // (0x60) (0x07) SW Reset 2 = 0x0a
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x07, 0x0a);

    // line nr: 1274, packet id: 154
    // (0x60) (0x07) SW Reset 2 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x07, 0x08);

    // line nr: 1276, packet id: 155
    // (0x60) (0x07) SW Reset 2 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x07, 0x08);

    // line nr: 1278, packet id: 156
    // (0x60) (0x2f) Unknown 0x60_0x2f = 0x00
    // (0x60) (0x30) * RX_CH_STATUS4 = 0x00
    {
    byte buf[2] = { 0x00, 0x00 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x2f, buf, 2);
    }

    // line nr: 1281, packet id: 157
    // (0x60) (0x2f) Unknown 0x60_0x2f = 0x00
    // (0x60) (0x30) * RX_CH_STATUS4 = 0x00
    {
    byte buf[2] = { 0x00, 0x00 };
    i2c_write_regs(&sii9233_i2c_ctx, 0x60, 0x2f, buf, 2);
    }

    // line nr: 1284, packet id: 158
    // (0x60) (0x2e) Unknown 0x60_0x2e = 0x80
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x2e, 0x80);

    // line nr: 1286, packet id: 159
    // (0x60) (0x75) Interrupt Unmask 1 = 0x01
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x75, 0x01);

    // line nr: 1288, packet id: 160
    // (0x60) (0x71) Interrupt Status 1 = 0x03
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x71, 0x03);

    // line nr: 1290, packet id: 161
    // (0x60) (0x09) Port Switch
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x09);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1292, packet id: 163
    // (0x60) (0x09) Port Switch = 0x10
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x09, 0x10);

    // line nr: 1294, packet id: 172
    // (0x68) (0xbf) MPEG_DECODE = 0x05
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0xbf, 0x05);

    // line nr: 1296, packet id: 173
    // (0x60) (0x7a) Interrupt Info Frame Control
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x7a);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1298, packet id: 175
    // (0x60) (0x73) Interrupt Status 3 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x73, 0x08);

    // line nr: 1300, packet id: 176
    // (0x60) (0x91) Interrupt Status 8 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x91, 0x08);

    // line nr: 1302, packet id: 177
    // (0x60) (0x94) INFM_CLR
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x94);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1304, packet id: 179
    // (0x68) (0x7f) SPD_DECODE = 0x81
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x7f, 0x81);

    // line nr: 1306, packet id: 180
    // (0x60) (0x73) Interrupt Status 3 = 0x02
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x73, 0x02);

    // line nr: 1308, packet id: 349
    // (0x60) (0xb8) AEX Exception Enable 3
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0xb8);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1310, packet id: 351
    // (0x60) (0xb7) AEX Exception Enable 2
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0xb7);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1312, packet id: 353
    // (0x60) (0x7a) Interrupt Info Frame Control
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x7a);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1314, packet id: 355
    // (0x60) (0x7a) Interrupt Info Frame Control = 0x6f
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x7a, 0x6f);

    // line nr: 1316, packet id: 356
    // (0x60) (0x09) Port Switch = 0x00
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x09, 0x00);

    // line nr: 1318, packet id: 357
    // (0x60) (0x82) TMDS Termination Control = 0xff
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x82, 0xff);

    // line nr: 1320, packet id: 374
    // (0x60) (0x08) System Ctrl 1 = 0x04
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x08, 0x04);

    // line nr: 1322, packet id: 375
    // (0x60) (0x06) System Status
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x06);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1324, packet id: 377
    // (0x60) (0x61) Deep Color Status
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x61);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1326, packet id: 379
    // (0x68) (0x34) RX_AUDP_STAT
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x34);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 1328, packet id: 381
    // (0x68) (0xbf) MPEG_DECODE = 0x05
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0xbf, 0x05);

    // line nr: 1330, packet id: 382
    // (0x60) (0x7a) Interrupt Info Frame Control
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x7a);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1332, packet id: 384
    // (0x60) (0x73) Interrupt Status 3 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x73, 0x08);

    // line nr: 1334, packet id: 385
    // (0x60) (0x91) Interrupt Status 8 = 0x08
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x91, 0x08);

    // line nr: 1336, packet id: 386
    // (0x60) (0x94) INFM_CLR
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x60, 0x94);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x61, buf, 1);
    }

    // line nr: 1338, packet id: 388
    // (0x68) (0x7f) SPD_DECODE = 0x81
    i2c_write_reg(&sii9233_i2c_ctx, 0x68, 0x7f, 0x81);

    // line nr: 1340, packet id: 389
    // (0x60) (0x73) Interrupt Status 3 = 0x02
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x73, 0x02);

    // line nr: 1342, packet id: 400
    // (0x60) (0x09) Port Switch = 0x80
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x09, 0x80);

    // line nr: 1344, packet id: 401
    // (0x60) (0x0a) Port Switch 2 = 0x0b
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x0a, 0x0b);

    // line nr: 1346, packet id: 402
    // (0x60) (0x82) TMDS Termination Control = 0x3f
    i2c_write_reg(&sii9233_i2c_ctx, 0x60, 0x82, 0x3f);

    // line nr: 1348, packet id: 403
    // (0x68) (0x34) RX_AUDP_STAT
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x34);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

    // line nr: 1350, packet id: 405
    // (0x68) (0x34) RX_AUDP_STAT
    i2c_write_reg_nr(&sii9233_i2c_ctx, 0x68, 0x34);

    {
    byte buf[1];
    i2c_read_buf(&sii9233_i2c_ctx, 0x69, buf, 1);
    }

